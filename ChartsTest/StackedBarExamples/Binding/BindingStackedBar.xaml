<UserControl x:Class="ChartsTest.StackedBarExamples.BindingStackedBar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:lvc="clr-namespace:lvc;assembly=LiveCharts"
             xmlns:stackedBarExamples="clr-namespace:ChartsTest.StackedBarExamples"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             Loaded="OnLoaded" d:DataContext="{d:DesignInstance  stackedBarExamples:BindingStackedBar}">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" HorizontalAlignment="Center" Grid.ColumnSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <TextBlock Margin="5" TextWrapping="Wrap">
                <Bold>Live Changes</Bold>: if you have a static number of series and need to change their Values this might help you, click on the buttons bellow to see how charts update automatically with their data
            </TextBlock>
            <StackPanel Grid.Row="1" Orientation="Horizontal">
                <Button Margin="10 0" Background="Transparent" 
                    BorderBrush="#505050" BorderThickness="3" Foreground="#505050"
                    Click="GoWildOnClick" Padding="10 3">
                    Real Time
                </Button>
                <Button Margin="10 0" Background="Transparent" 
                    BorderBrush="#505050" BorderThickness="3" Foreground="#505050"
                    Click="AddValueOnClick" Padding="10 3">
                    +
                </Button>
                <Button Margin="10 0" Background="Transparent" 
                    BorderBrush="#505050" BorderThickness="3" Foreground="#505050"
                    Click="RemoveValueOnClick" Padding="10 3">
                    -
                </Button>
            </StackPanel>
        </Grid>
        <lvc:StackedBarChart Name="Chart" Grid.Row="1" Grid.Column="0">
            <lvc:StackedBarChart.Series>
                <lvc:StackedBarSeries Title="Series 1" Values="{Binding ViewModel.Series1}"/>
                <lvc:StackedBarSeries Title="Series 2" Values="{Binding ViewModel.Series2}"/>
            </lvc:StackedBarChart.Series>
            <lvc:StackedBarChart.AxisY>
                <lvc:Axis IsEnabled="False" ShowLabels="False">
                    <lvc:Axis.Separator>
                        <lvc:Separator IsEnabled="False"></lvc:Separator>
                    </lvc:Axis.Separator>
                </lvc:Axis>
            </lvc:StackedBarChart.AxisY>
            <lvc:StackedBarChart.AxisX>
                <lvc:Axis IsEnabled="False" ShowLabels="False">
                    <lvc:Axis.Separator>
                        <lvc:Separator IsEnabled="False" ></lvc:Separator>
                    </lvc:Axis.Separator>
                </lvc:Axis>
            </lvc:StackedBarChart.AxisX>
        </lvc:StackedBarChart>
    </Grid>
</UserControl>
